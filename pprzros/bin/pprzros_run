#! /usr/bin/env python

# For testing:
# rostopic echoc - --filter "m.msg_name=='PONG'" /to_ros

import sys
import argparse


if __name__ == '__main__':
    try:
        interface_type = sys.argv[1]
    except:
        print("usage: pprzros_run interface_type [options]")
        sys.exit(2)
        
    parser = argparse.ArgumentParser()
    
    # Common arguments
    parser.add_argument("-v", "--verbose", help="Verbose mode", dest='verbose', default=False)
    parser.add_argument("-c", "--msg_class",
                        help="Class of incoming messages",
                        dest='msg_class', default='telemetry')
    
    if interface_type == 'udp':
        from pprzros.rosudp import RosUdpMessagesInterface
        from pprzlink.udp import *
        parser.add_argument("-d", "--destination", 
                            help="UDP destination adress", dest='destination', 
                            default='127.0.0.1')      
        parser.add_argument("-up", "--uplink_port",
                            help="Uplink port", dest='uplink', 
                            default=UPLINK_PORT, type=int)
        parser.add_argument("-dp", "--downlink_port",
                            help="Downlink port", dest='downlink',
                            default=DOWNLINK_PORT, type=int)
        args, unknown = parser.parse_known_args()
        pprzros = RosUdpMessagesInterface(args.destination, args.verbose, 
                                          args.uplink, args.downlink, args.msg_class)
        print 'Using UDP interface'
        
    elif interface_type == 'serial':
        from pprzros.rosserial import RosSerialMessagesInterface
        parser.add_argument("-d", "--device",
                            help="Serial device", dest='device',
                            default='/dev/ttyUSB0')
        parser.add_argument("-b", "--baudrate",
                            help="Baudrate", dest='baudrate',
                            default='115200', type=int)
        args, unknown = parser.parse_known_args()
        pprzros = RosSerialMessagesInterface(args.verbose, args.device, args.baudrate, args.msg_class)
        print 'Using Serial interface'
        
    elif interface_type == 'ivy':
        from pprzros.rosivy import RosIvyMessagesInterface
        from pprzlink.ivy import *
        parser.add_argument("-b", "--ivy_bus",
                            help="Ivy bus", dest='ivy_bus',
                            default=IVY_BUS)
        parser.add_argument("-n", "--name",
                            help="Ivy agent name", dest='name',
                            default='pprzros')
        args, unknown = parser.parse_known_args()
        pprzros = RosIvyMessagesInterface(args.name, True, args.verbose, args.ivy_bus)
        print 'Using Ivy interface'
          
    else:
        print "Unknown interface type '{}': select serial, udp or ivy".format(interface_type)
        sys.exit(1)
        
    pprzros.run()


